"""
iaf_cond_diff_exp - Simple conductance based leaky integrate-and-fire neuron model
###############################################################################

Description
+++++++++++

iaf_cond_diff_exp is an implementation of a spiking neuron using IAF dynamics with
conductance-based synapses. Incoming spike events induce a post-synaptic change
of conductance modelled by a difference of exp functions.


References
++++++++++

.. [1] Meffin H, Burkitt AN, Grayden DB (2004). An analytical
       model for the large, fluctuating synaptic conductance state typical of
       neocortical neurons in vivo. Journal of Computational Neuroscience,
       16:159-175.
       DOI: https://doi.org/10.1023/B:JCNS.0000014108.03012.81
.. [2] Bernander O, Douglas RJ, Martin KAC, Koch C (1991). Synaptic background
       activity influences spatiotemporal integration in single pyramidal
       cells.  Proceedings of the National Academy of Science USA,
       88(24):11569-11573.
       DOI: https://doi.org/10.1073/pnas.88.24.11569
.. [3] Kuhn A, Rotter S (2004) Neuronal integration of synaptic input in
       the fluctuation- driven regime. Journal of Neuroscience,
       24(10):2345-2356
       DOI: https://doi.org/10.1523/JNEUROSCI.3349-03.2004

See also
++++++++

iaf_cond_exp
"""
neuron iaf_cond_diff_exp:

  state:
    r integer = 0      # counts number of tick during the refractory period
    V_m mV = E_L   # membrane potential
  end

  equations:
    kernel g_in = sec_con * (exp(-t / tau_syn_in_decay) - exp(-t / tau_syn_in_rise)) / (tau_syn_in_decay - tau_syn_in_rise)
    kernel g_ex = sec_con * (exp(-t / tau_syn_ex_decay) - exp(-t / tau_syn_ex_rise)) / (tau_syn_ex_decay - tau_syn_ex_rise)

    inline I_syn_exc pA = convolve(g_ex, spikeExc)  * ( V_m - E_ex )
    inline I_syn_inh pA = convolve(g_in, spikeInh)  * ( V_m - E_in )
    inline I_leak pA = g_L * ( V_m - E_L )

    V_m' = ( -I_leak - I_syn_exc - I_syn_inh + I_e + I_stim ) / C_m
  end

  parameters:
    V_th mV = -55.0 mV    # Threshold Potential
    V_reset mV = -60.0 mV # Reset Potential
    t_ref ms = 2. ms      # Refractory period
    g_L nS = 16.6667 nS   # Leak Conductance
    C_m pF = 250.0 pF    # Membrane Capacitance
    E_L mV = -70.0 mV     # Leak reversal Potential (aka resting potential)

    E_ex mV = 0 mV            # Excitatory reversal Potential
    tau_syn_ex_decay ms = 6.0 ms    # E decay time constant
    tau_syn_ex_rise ms = 1.0 ms    # E rise time constant
    E_in mV = -85.0 mV        # Inhibitory reversal Potential
    tau_syn_in_decay ms = 2.0 ms    # I decay time constant
    tau_syn_in_rise ms = 0.5 ms    # I rise time constant

    # constant external input current
    I_e pA = 0 pA

    # additional
    sec_con ms = 1.0 ms
  end

  internals:
    RefractoryCounts integer = steps(t_ref) # refractory time in steps
  end

  input:
    spikeInh nS <- inhibitory spike
    spikeExc nS <- excitatory spike
    I_stim pA <- continuous
  end

  output: spike

  update:
    integrate_odes()
    if r != 0: # neuron is absolute refractory
      r =  r - 1
      V_m = V_reset # clamp potential
    elif V_m >= V_th:  # neuron is not absolute refractory
      r = RefractoryCounts
      V_m = V_reset # clamp potential
      emit_spike()
    end
  end

end
